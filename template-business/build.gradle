buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'java-library'
}

dependencyLocking {
    lockAllConfigurations()
}

apply from: '../group-version.gradle'
apply from: '../compatibility.gradle'
apply from: '../repositories.gradle'
apply from: '../common-dependencies.gradle'

compileJava {
    doFirst {
        classpath += sourceSets.main.compileClasspath

        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-SYSTEM',
                '-d', sourceSets.main.output.classesDirs.asPath
        ]
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

task testsJar(type: Jar, dependsOn: [testClasses]) {
    archiveClassifier.set('tests')
    from sourceSets.test.output
}

jar.finalizedBy(javadocJar, sourcesJar, testsJar)

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}